name: CI/CD Pipeline for Temzz 2-Tier Node App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout the repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3Ô∏è‚É£ Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4Ô∏è‚É£ Build and push backend image
      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/temzz-backend:latest

      # 5Ô∏è‚É£ Build and push frontend image
      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/temzz-frontend:latest

      # 6Ô∏è‚É£ Deploy to Azure VM via SSH
      - name: Deploy to VM
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            echo "üì¶ Deploying Temzz 2-Tier App on Azure VM..."

            # Create or move into app directory
            cd ~/temzz-2tier-app || mkdir -p ~/temzz-2tier-app && cd ~/temzz-2tier-app

            # Pull latest Docker images
            docker pull ${{ secrets.DOCKER_USERNAME }}/temzz-backend:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/temzz-frontend:latest

            # Create docker-compose.yml dynamically
            cat << 'EOF' > docker-compose.yml
            version: '3.8'
            services:
              backend:
                image: ${{ secrets.DOCKER_USERNAME }}/temzz-backend:latest
                container_name: temzz-backend
                restart: always
                ports:
                  - "5000:5000"

              frontend:
                image: ${{ secrets.DOCKER_USERNAME }}/temzz-frontend:latest
                container_name: temzz-frontend
                restart: always
                ports:
                  - "80:80"
            EOF

            # Run the app
            docker compose down || true
            docker compose up -d

            echo "‚úÖ Deployment successful!"
